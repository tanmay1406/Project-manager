Project=>
1 PRD project requierment document 
used to keep what to build and what not to build 
for example we want a authentication feature 
we need a create acc, login , google login, forgot password
PMP project management platform 




the very first step after creating the PRD is to set up the project 


to setup node for backed use command=> npm init 
and then fill up the rest of the list and thhen edit the script in the JSON file to your requierment



Now we need to make a feature such that all the devs are in sync in writing the code 
to get the uniformat we use prettier , write the command =>  npm install --save-dev --save-exact prettier

and then use => npx prettier . --write 


now you may ask where are the uniform syntax =>many of them are already set as default 
and for others we need to create a file for it .prettierrc
and .prettierignore this tells it what files not to touch 



# Auto restart your server
kuch bhi change karein toh server apne app refresh ho jaye uske liye kya karein?
nodemon will be used 
node --watch

use the command => npm install --save-dev nodemon
this refreshes the server everytime it detects a change in any of the files 

and then change the  JSON file from node to nodemon
iss case mei sirf npm run dev hi use krna hoga 


# .env files on backend
use the command=>npm i d0tenv 
this is to safe guard the sensitive data that is excessed through process.env



Now we need to restructure the project as it is very easy at this point 
we can use lib like nest js which automatically makes some default folders

we forst need a public folder which will server everything 
we need to wrap everything in a folder named scr
the controllers , which contain all the logic and function 
db for data base 
middlewres , this is between the server and the database
models=>structure of how you are going to store the data in the database
routes
utils
validators



the git never stores any empty folders


ctrl + c to kill the server


To install exprees ude the command => npm install express --save 

dont use spacce in env files 


Using Postman for API teesting and API development 


Separating the index and the app file 
it makes the entrance point of the project shorter and more readable 


Cross-origin resource sharing CORS 

app.use->middlewares 

CORS is a nodejs package for providing a connect/exprees middlewares that can be used to enable CORS with various options 


So cors basicaaly tab kaam ata hai jab tumhara frionted ek port pe chal raha ho or backend kisi or port pe , tab generally browsers uss chiz ko block kr dete hain uss process ko smooth krne ke liye Cros ka use krte hhain 

it is basically saying that what the backend is allowed to have contact with 


WORKING ON THE RESPONSES FROM THE SRERVER TO THE BACKEND

Response can be of known types , 1 status code 2 data 3 message 
also error
status code
data mesage 

Now the error are already there in node js but we need to design the Responseby oueselves 



How to connect to Database ?
moongoose allows you to talk to the database in a very easy syntax


Yahan tak tera basic tempplate hai , jo har project mei jana hi chahiye 
HEALTH CHECK APIs
this is done in routes first 









Database ka pura schema models mei rakhte hain 
Hashing your password using hooks from moongoose
install bcrypt ye wala kaam bhi user-models mei hi kiya jata hai 



How to check for password when someone tries to entre 
This is done by hashing the entered password and then comparing it to the hashed data stored into the database 


WORKING WITH JWT TOKENS 
basically the server sends you back a string that tells the browser if the user is registered or not 
This is mainly used for authentication and information exchange 
Once the user is logged in , each subsequesnt request will include the JWT 
postman->headers->new key (authentication)->bearer->pass on any value that needs to be returned vaefuvuqfeglrehg


A JWT token contain three things
Header, Payload, Signature

TOKEN can be of two types , with data and without data 
without data is for only one time use like veryfying the data (majorly used for things like reset password a lot)

Access token is a short time token 
refresh token is a long term token 
the generation is same for same they only differ is refresh token is with data 

Access token is like a fingerprint but refresh token is stored in the database


Now creating the required token this also takea place in the user-models

to generate these we need another module 
npm install jsonwebtoken


Now creating tokens wiithout data we need another module 
its a inbuilt function node js 

it is called crypto




Now we need to share the verification email to the user 0, this will be done using another libraray 
npm install mailgen, this is only to prepare the content that you want to send throug the email 


Now we will send the email to the user 
we can use AWS SES 
Brevo
these two are production grade ,
there testing level as well -> mailtrap
W also need a lib nodemailer to actually send the mails
go to env folder for this one 



Now lets actually register a user 
How do you collect the data from the frontend ?
by going into postman and then in the body section  and then choosing raw
Now we will use all the token method to create thee tokens 



then we create the routes for these registered users 

#convert everystep to text in between class through git 



VALIDATORS
Basically the data that is coming from the routes to the database needs to checked if they are of the type defined 
like passwords, email

ZOD , YUP , express validators
we need to work on three things in this section 
middlewares,validators,routes

first install
npm install express-validator








login
take data from the user
validate the data 
if user exist 
if password is correct
generate tokens
send tokens in cookies as well 


Now fro the cookies , has a problem that we need to solve 
npm install cookie-parser
or ye sab kuch app.js mei hoga 


Now go to auth controllers 
yahan pe password check kro 
or phir token gen kr do 
and then start to work with cookie




Phir auth routes mei jao aur login ka ek route bana do 